$schema: "https://json-schema.org/draft/2020-12/schema"
title: Spectral Ruleset Test Suite
description: |
  A machine-readable description of tests to run to ensure a Spectral Ruleset or a subset
  or it works as intended. In its current version, the format only deals with
  rules, not aliases or extends.
  
  A single test suite file may or may not contain all of the tests for all rules contained
  in a ruleset. For maintainability and readability, it could be interesting that a test 
  suite focuses on a single rule, and so have as many test suite files as rules.
  Though it would be possible to split the tests of a single rule across test suite, it is
  not recommended to do so. 
type: object
unevaluatedProperties: false
required:
  - testSuiteVersion
  - ruleset
  - rules
properties:
  testSuiteVersion:
    description: The version of Spectral Ruleset Test Suite used
    type: string
    enum:
      - spectral-v1.0
  ruleset:
    description: |
      The relative or absolute filepath or url to the Spectral Ruleset file containing
      the elements to be tested. The file can be either in YAML or JSON format.
    type: string
  rules:
    description: |
      Rule tests. Each key of this object corresponds to a rule name,
      hence the the keys of rules in a Spectral ruleset.
    type: object
    additionalProperties:
      $ref: "#/$defs/RuleTests"
$defs:
  RuleTests:
    description: Tests to validate a Spectral rule works as intended 
    type: object
    unevaluatedProperties: false
    properties:
      format:
        description: The format targeted by this rule
        type: string
        # TODO add asyncapi and jsonschema
        enum:
          - openapi
      versions:
        description: The version of the format targeted by this rule
        # TODO conditional enum based on format
        type: array
        minItems: 1
        items:
          type: string
          enum:
            - "2.0"
            - "3.0"
            - "3.1"
      severity:
        description: The severity of the problems returned by the rule
        type: string
        enum:
          - error
          - warn
          - info
          - hint
      given:
        description: |
          The list of test checking the JSON Path Plus path(s) provided in given:
          
          - find something and the value is what is expected (minimal, at least one of those)
          - do not find what is supposed to ignore (for complex path involving filters)
        type: array
        minItems: 1
        items:
          $ref: "#/$defs/GivenTest"
      then:
        description: |
          The list of tests checking the rule returns the expected problems or not.
          There must be at least a test checking problems are returned, and test without problems.
        type: array
        minItems: 2
        items:
          $ref: "#/$defs/ThenTest"
  GivenTest:
    description: The description of a given's JSON Path Plus test
    type: object
    unevaluatedProperties: false
    required:
      - description
      - expected
    # documentTemplate and documents are mutually exclusive
    dependentSchemas:
      documentTemplate:
        not:
          required:
            - documents
    # a documentTemplate OR documents must be provided
    oneOf:
      - required: [documentTemplate]
      - required: [documents]
    properties:
      description:
        description: The description of the test
        type: string
      expected:
        description: The expected result of the test. Hence, the values and their paths which are supposed to be found. 
        type: array
        items:
          $ref: "#/$defs/GivenTestExpected"
      documentTemplate:
        $ref: "#/$defs/DocumentTemplate"
      documents:
        type: array
        minItems: 1
        items:
          $ref: "#/$defs/Document"
  GivenTestExpected:
    description: An expected element of the response of a given test. The value can be anything.
    type: object
    unevaluatedProperties: false
    properties:
      path:
        $ref: "#/$defs/JsonPointer"
      value: 
        description: The value of the found element
  ThenTest:
    description: The description of a test checking the problems returned when executing this rule.
    type: object
    unevaluatedProperties: false
    required:
      - description
      - expected
    # documentTemplate and documents are mutually exclusive
    dependentSchemas:
      documentTemplate:
        not:
          required:
            - documents
    # a documentTemplate OR documents must be provided
    oneOf:
      - required: [documentTemplate]
      - required: [documents]
    properties:
      description:
        description: The description of the test
        type: string
      expected:
        description: |
          The expected result of the test. Hence, the path of the problems detected.
          Its value is an empty array if documentTemplate is valid. 
        type: array
        minItems: 0
        items:
          $ref: "#/$defs/ThenTestExpected"
      documentTemplate:
          $ref: "#/$defs/DocumentTemplate"
      documents:
        type: array
        minItems: 1
        items:
          $ref: "#/$defs/Document"
  ThenTestExpected:
    description: The path of an expected problem detected when Spectal runs a rule.
    type: object
    unevaluatedProperties: false
    required:
      - path
    properties:
      path:
        $ref: "#/$defs/JsonPointer"
  JsonPointer:
    description: The [JSON Pointer](https://www.rfc-editor.org/rfc/rfc6901) targeting the found element.
    type: string
  DocumentTemplate:
    description: A document that will be used as template to find what is expected across the versions.
    type: object
  Document:
    required: 
      - version
      - document
    properties:
      version:
        description: The version of the formats targeted by this document
        type: string
        enum:
          - "2.0"
          - "3.0"
          - "3.1"
      document:
        description: The document to use for the test
        type: object